CREATE OR REPLACE TABLE FUNCTION `also-analytics-model-nonprod.2_NEGOCIO_S4.TF_VENDA_MENSAL_4B`(IP_COMPETEC STRING) AS (
WITH var_competec_atual AS (
		SELECT CALMONTH
		FROM `also-analytics-model-nonprod.1_AQUISICAO_MXM.dm_tempo_mensal`
		WHERE PARSE_DATE('%Y%m%d', CALMONTH) BETWEEN DATE_SUB(PARSE_DATE('%Y%m%d', IP_COMPETEC || '01'), INTERVAL 1 YEAR) AND PARSE_DATE('%Y%m%d', IP_COMPETEC)
)

, var_competec_anterior AS (
		SELECT CALMONTH_PREVIOUS AS CALMONTH
		FROM `also-analytics-model-nonprod.1_AQUISICAO_MXM.dm_tempo_mensal`
		WHERE PARSE_DATE('%Y%m%d', CALMONTH) BETWEEN DATE_SUB(PARSE_DATE('%Y%m%d', IP_COMPETEC || '01'), INTERVAL 1 YEAR) AND PARSE_DATE('%Y%m%d', IP_COMPETEC)
)

, var_competec AS (
		SELECT CALMONTH FROM var_competec_atual UNION DISTINCT
		SELECT CALMONTH FROM var_competec_anterior
)
		
, var_maior_venda AS (
			SELECT 
				INTRENO_VICNCN,
				CALMONTH,
				MAX(INTRENO_ECC)					AS INTRENO_ECC,
				MAX(CSHP_CDCONTRATO_MXM)			AS CSHP_CDCONTRATO_MXM,
				MAX(CC_CDCONTRATO)				AS CC_CDCONTRATO,
				MAX(XMETXT)						AS XMETXT,
				MAX(SMENR)						AS SMENR,
				MAX(RECNTXT)						AS RECNTXT,
				MAX(ZZNMFAN)						AS ZZNMFAN,
				MAX(FQMFLART)						AS FQMFLART,
				MAX(CC_FQMFLART_SONAE)			AS CC_FQMFLART_SONAE,
				SUM(NET_SALES)					AS NET_SALES,
				SUM(GROSS_SALES)					AS GROSS_SALES,
				SUM(CC_VOLVED)					AS CC_VOLVED
		FROM `also-analytics-model-nonprod.2_NEGOCIO_S4.TF_VENDA_DIARIA_4B` ()
		GROUP BY
			INTRENO_VICNCN,
			CALMONTH
)

, var_venda AS (
		SELECT 
			VENDA.INTRENO_VICNCN,
			VENDA.INTRENO_ECC,
			VENDA.CSHP_CDCONTRATO_MXM,
			VENDA.CC_CDCONTRATO,
			VENDA.CALMONTH,
            FORMAT_DATE('%Y%m%d', DATE_SUB(PARSE_DATE('%Y%m%d', IP_COMPETEC || '01'), INTERVAL 1 YEAR)) AS CALMONTH_ADD_YEAR,
			VENDA.XMETXT,
			VENDA.SMENR,
			VENDA.RECNTXT,
			VENDA.ZZNMFAN,
			TEMPO.CALMONTH_PREVIOUS AS CALMONTH_ANT,
			VENDA.FQMFLART,
			VENDA.CC_FQMFLART_SONAE,
			VENDA.NET_SALES,
			VENDA.GROSS_SALES,
			VENDA.CC_VOLVED,
			CASE WHEN CC_FQMFLART_SONAE	= 0 THEN 0 ELSE 1 END AS FLAG_FQMFLART_ZERO,
			CASE WHEN CC_VOLVED			= 0 THEN 0 ELSE 1 END AS FLAG_VOLVED_ZERO
		FROM var_maior_venda AS VENDA
		LEFT OUTER JOIN `also-analytics-model-nonprod.1_AQUISICAO_MXM.dm_tempo_mensal` AS TEMPO
			ON TEMPO.CALMONTH = FORMAT_DATE('%Y%m%d', VENDA.CALMONTH)
)
	
, var_venda_atual_anterior AS (
    SELECT
        CONTR.CSHP_CDSHOPPING																AS CSHP_CDSHOPPING,
        CONTR.BUKRS 																		AS BUKRS,
        CONTR.INTRENO_VICNCN																AS INTRENO_VICNCN,
        CONTR.INTRENO																		AS CSHP_CDCONTRATO,
        CONTR.INTRENO																		AS INTRENO,
        CONTR.INTRENO_ECC																	AS INTRENO_ECC,
        CONTR.CSHP_CDCONTRATO_MXM															AS CSHP_CDCONTRATO_MXM,
        CONTR.CC_CDCONTRATO 																AS CC_CDCONTRATO,
        IFNULL(FORMAT_DATE('%Y%m', VENDA_ATUAL.CALMONTH), VENDA_ANTERIOR.CALMONTH_ADD_YEAR)					AS CALMONTH,
        IFNULL(VENDA_ATUAL.FQMFLART, CONTR.FQMFLART)									AS FQMFLART,
        IFNULL(VENDA_ANTERIOR.FQMFLART, 0)													AS FQMFLART_ANT,
        CONTR.CDTPAQUISICAO																	AS CDTPAQUISICAO,
        IFNULL(VENDA_ATUAL.SMENR, CONTR.SMENR)											AS SMENR,
        IFNULL(VENDA_ATUAL.XMETXT, CONTR.XMETXT)										AS XMETXT,
        CONTR.ZZGRPAT_BR																	AS ZZGRPAT_BR,
        CONTR.ZZSUGRP_BR																	AS ZZSUGRP_BR,
        CONTR.ZZATIVM_BR																	AS ZZATIVM_BR,
        VENDA_ANTERIOR.SMENR																AS SMENR_ANT,
        VENDA_ANTERIOR.XMETXT																AS XMETXT_ANT,
        CONTR.SNUNR 																		AS SNUNR,
        CONTR.CC_CDGRUPOABL 																AS CC_CDGRUPOABL,
        CONTR.CDTIPOUNL 																	AS CDTIPOUNL,
        CONTR.KEY_GRPABRASCE																AS KEY_GRPABRASCE,
        CONTR.KEY_ATVABRASCE																AS KEY_ATVABRASCE,
        VENDA_ANTERIOR.ZZNMFAN																AS ZZNMFAN_ANT,
        IFNULL(VENDA_ATUAL.ZZNMFAN, CONTR.ZZNMFAN) 										AS ZZNMFAN,
        IFNULL(VENDA_ATUAL.RECNTXT, CONTR.RECNTXT) 										AS RECNTXT,
        VENDA_ANTERIOR.RECNTXT																AS RECNTXT_ANT,
        CASE WHEN IFNULL(FORMAT_DATE('%Y%m', VENDA_ATUAL.CALMONTH), VENDA_ANTERIOR.CALMONTH_ADD_YEAR) = IP_COMPETEC 
                THEN 'SIM' 
                ELSE 'NAO'
        END 																					AS CC_FLAG_MES,
        CASE WHEN LEFT(IFNULL(FORMAT_DATE('%Y%m', VENDA_ATUAL.CALMONTH), VENDA_ANTERIOR.CALMONTH_ADD_YEAR), 4) = LEFT(IP_COMPETEC, 4) 
                THEN 'SIM' 
                ELSE 'NAO'
        END 																					AS CC_FLAG_YTD,
        IFNULL(VENDA_ATUAL.CC_VOLVED, 0)													AS CC_VOLVED,
        IFNULL(VENDA_ANTERIOR.CC_VOLVED, 0)													AS CC_VOLVED_ANT,
        IFNULL(VENDA_ATUAL.CC_FQMFLART_SONAE, CONTR.CC_FQMFLART_SONAE)					AS CC_FQMFLART_SONAE,
        IFNULL(VENDA_ANTERIOR.CC_FQMFLART_SONAE, 0)											AS CC_FQMFLART_SONAE_ANT,
        IFNULL(VENDA_ATUAL.CC_VOLVED * VENDA_ATUAL.FLAG_FQMFLART_ZERO, 0)				AS CC_VOLVED_COM_FQMFLART,
        IFNULL(VENDA_ATUAL.CC_FQMFLART_SONAE * VENDA_ATUAL.FLAG_VOLVED_ZERO, 0)			AS CC_FQMFLART_COM_VOLVED,
        IFNULL(VENDA_ANTERIOR.CC_VOLVED * VENDA_ANTERIOR.FLAG_FQMFLART_ZERO, 0)			AS CC_VOLVED_COM_FQMFLART_ANT,
        IFNULL(VENDA_ANTERIOR.CC_FQMFLART_SONAE * VENDA_ANTERIOR.FLAG_VOLVED_ZERO, 0)	AS CC_FQMFLART_COM_VOLVED_ANT,
        IFNULL(VENDA_ATUAL.NET_SALES, 0)													AS NET_SALES,
        IFNULL(VENDA_ANTERIOR.NET_SALES, 0)													AS NET_SALES_ANT,
        IFNULL(VENDA_ATUAL.GROSS_SALES, 0)													AS GROSS_SALES,
        IFNULL(VENDA_ANTERIOR.GROSS_SALES, 0)												AS GROSS_SALES_ANT
    FROM (
        SELECT INTRENO_VICNCN FROM var_venda GROUP BY INTRENO_VICNCN
    ) AS TODOS
    LEFT OUTER JOIN var_venda AS VENDA_ATUAL
        ON  VENDA_ATUAL.INTRENO_VICNCN = TODOS.INTRENO_VICNCN
        AND FORMAT_DATE('%Y%m', VENDA_ATUAL.CALMONTH) IN (SELECT CALMONTH FROM var_competec_atual)
    LEFT OUTER JOIN var_venda AS VENDA_ANTERIOR
        ON  VENDA_ANTERIOR.INTRENO_VICNCN = TODOS.INTRENO_VICNCN
        AND FORMAT_DATE('%Y%m', VENDA_ANTERIOR.CALMONTH) IN (SELECT CALMONTH FROM var_competec_anterior)
    LEFT OUTER JOIN `also-analytics-model-nonprod.3_MATERIALIZADO_S4.DIM_CONTRATO` AS CONTR
        ON CONTR.INTRENO_VICNCN = TODOS.INTRENO_VICNCN
)

    SELECT
        CSHP_CDSHOPPING,
        BUKRS,
        INTRENO_VICNCN,
        CSHP_CDCONTRATO,
        INTRENO,
        INTRENO_ECC,
        CSHP_CDCONTRATO_MXM,
        CC_CDCONTRATO,
        CALMONTH,
        MAX(FQMFLART) 					AS FQMFLART,
        MAX(FQMFLART_ANT) 				AS FQMFLART_ANT,
        CDTPAQUISICAO,
        SMENR,
        XMETXT,
        ZZGRPAT_BR,
        ZZSUGRP_BR,
        ZZATIVM_BR,
        MAX(SMENR_ANT)					AS SMENR_ANT,
        MAX(XMETXT_ANT)					AS XMETXT_ANT,
        SNUNR,
        CC_CDGRUPOABL,
        CDTIPOUNL,
        KEY_GRPABRASCE,
        KEY_ATVABRASCE,
        MAX(ZZNMFAN_ANT)					AS ZZNMFAN_ANT,
        ZZNMFAN,
        RECNTXT,
        MAX(RECNTXT_ANT)					AS RECNTXT_ANT,
        CC_FLAG_MES,
        CC_FLAG_YTD,
        SUM(CC_VOLVED)					AS CC_VOLVED,
        SUM(CC_VOLVED_ANT)				AS CC_VOLVED_ANT,
        MAX(CC_FQMFLART_SONAE)			AS CC_FQMFLART_SONAE,
        MAX(CC_FQMFLART_SONAE_ANT)		AS CC_FQMFLART_SONAE_ANT,
        SUM(CC_VOLVED_COM_FQMFLART)		AS CC_VOLVED_COM_FQMFLART,
        SUM(CC_FQMFLART_COM_VOLVED)		AS CC_FQMFLART_COM_VOLVED,
        SUM(CC_VOLVED_COM_FQMFLART_ANT)	AS CC_VOLVED_COM_FQMFLART_ANT,
        SUM(CC_FQMFLART_COM_VOLVED_ANT)	AS CC_FQMFLART_COM_VOLVED_ANT,
        SUM(NET_SALES)					AS NET_SALES,
        SUM(NET_SALES_ANT)				AS NET_SALES_ANT,
        SUM(GROSS_SALES)					AS GROSS_SALES,
        SUM(GROSS_SALES_ANT)				AS GROSS_SALES_ANT,
        CASE WHEN SUM(CC_VOLVED) + SUM(CC_VOLVED_ANT) = 0 THEN 'S' ELSE 'N' END AS FLAG_VENDA_ZERO
    FROM (
        SELECT
            CSHP_CDSHOPPING,
            BUKRS,
            INTRENO_VICNCN,
            CSHP_CDCONTRATO,
            INTRENO,
            INTRENO_ECC,
            CSHP_CDCONTRATO_MXM,
            CC_CDCONTRATO,
            CALMONTH,
            FQMFLART,
            FQMFLART_ANT,
            CDTPAQUISICAO,
            SMENR,
            XMETXT,
            ZZGRPAT_BR,
            ZZSUGRP_BR,
            ZZATIVM_BR,
            SMENR_ANT,
            XMETXT_ANT,
            SNUNR,
            CC_CDGRUPOABL,
            CDTIPOUNL,
            KEY_GRPABRASCE,
            KEY_ATVABRASCE,
            ZZNMFAN_ANT ,
            ZZNMFAN,
            RECNTXT,
            RECNTXT_ANT,
            CC_FLAG_MES,
            CC_FLAG_YTD,
            CC_VOLVED,
            CC_VOLVED_ANT,
            CC_FQMFLART_SONAE,
            CC_FQMFLART_SONAE_ANT,
            CC_VOLVED_COM_FQMFLART,
            CC_FQMFLART_COM_VOLVED,
            CC_VOLVED_COM_FQMFLART_ANT,
            CC_FQMFLART_COM_VOLVED_ANT,
            NET_SALES,
            NET_SALES_ANT,
            GROSS_SALES,
            GROSS_SALES_ANT
        FROM var_venda_atual_anterior
/*	    
    UNION
    
        SELECT
            CSHP_CDSHOPPING,
            BUKRS,
            INTRENO_VICNCN,
            CSHP_CDCONTRATO,
            INTRENO,
            INTRENO_ECC,
            CSHP_CDCONTRATO_MXM,
            CC_CDCONTRATO,
            CALMONTH,
            FQMFLART,
            FQMFLART_ANT,
            CDTPAQUISICAO,
            SMENR,
            XMETXT,
            ZZGRPAT_BR,
            ZZSUGRP_BR,
            ZZATIVM_BR,
            SMENR_ANT,
            XMETXT_ANT,
            SNUNR,
            CC_CDGRUPOABL,
            CDTIPOUNL,
            KEY_GRPABRASCE,
            KEY_ATVABRASCE,
            ZZNMFAN_ANT ,
            ZZNMFAN,
            RECNTXT,
            RECNTXT_ANT,
            CC_FLAG_MES,
            CC_FLAG_YTD,
            CC_VOLVED,
            CC_VOLVED_ANT,
            CC_FQMFLART_SONAE,
            CC_FQMFLART_SONAE_ANT,
            CC_VOLVED_COM_FQMFLART,
            CC_FQMFLART_COM_VOLVED,
            CC_VOLVED_COM_FQMFLART_ANT,
            CC_FQMFLART_COM_VOLVED_ANT,
            NET_SALES,
            NET_SALES_ANT,
            GROSS_SALES,
            GROSS_SALES_ANT
        FROM also-analytics-model-nonprod.2_NEGOCIO_S4.TF_VENDA_MENSAL_LEGADO_4B(:IP_COMPETEC , :IP_ATUALIDADE_DADOS)
        WHERE CALMONTH BETWEEN '202203' AND '202304' -- Limite do legado :: legado até 03.2022
            AND INTRENO_VICNCN IS NOT NULL */
    )
    GROUP BY
        CSHP_CDSHOPPING,
        BUKRS,
        INTRENO_VICNCN,
        CSHP_CDCONTRATO,
        INTRENO,
        INTRENO_ECC,
        CSHP_CDCONTRATO_MXM,
        CC_CDCONTRATO,
        CALMONTH,
        CDTPAQUISICAO,
        SMENR,
        XMETXT,
        ZZGRPAT_BR,
        ZZSUGRP_BR,
        ZZATIVM_BR,
        SNUNR,
        CC_CDGRUPOABL,
        CDTIPOUNL,
        KEY_GRPABRASCE,
        KEY_ATVABRASCE,
        ZZNMFAN,
        RECNTXT,
        CC_FLAG_MES,
        CC_FLAG_YTD
);