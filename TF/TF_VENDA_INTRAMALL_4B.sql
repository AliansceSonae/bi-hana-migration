CREATE OR REPLACE TABLE FUNCTION `also-analytics-model-nonprod.2_NEGOCIO_S4.TF_VENDA_INTRAMALL_4B`() AS (
WITH var_salestype AS (
    SELECT ''     AS SALESTYPE UNION ALL
    SELECT 'Z001' AS SALESTYPE UNION ALL
    SELECT 'Z002' AS SALESTYPE UNION ALL
    SELECT 'Z003' AS SALESTYPE UNION ALL
    SELECT 'Z004' AS SALESTYPE UNION ALL
    SELECT 'Z005' AS SALESTYPE UNION ALL
    SELECT 'Z006' AS SALESTYPE UNION ALL
    SELECT 'Z007' AS SALESTYPE UNION ALL
    SELECT 'Z008' AS SALESTYPE UNION ALL
    SELECT 'Z009' AS SALESTYPE UNION ALL
    SELECT 'Z010' AS SALESTYPE UNION ALL
    SELECT 'Z011' AS SALESTYPE UNION ALL
    SELECT 'Z012' AS SALESTYPE
),
    		
var_reporttype AS (
    SELECT ''   AS SALESREPORTTYPE UNION ALL
    SELECT 'G'  AS SALESREPORTTYPE UNION ALL
    SELECT 'NG' AS SALESREPORTTYPE
),
      
var_sunday AS (
    SELECT
        T1.DATE_SQL,
        MAX(T2.DATE_SQL)				AS DTSTARTWEEK,
        DATE_ADD(MAX(T2.DATE_SQL), INTERVAL 6 DAY)	AS DTFINISHWEEK
    FROM `also-analytics-model-nonprod.1_AQUISICAO_MXM.dm_tempo_dia` AS T1 
    LEFT OUTER JOIN `also-analytics-model-nonprod.1_AQUISICAO_MXM.dm_tempo_dia` AS T2 
        ON  T2.DATE_SQL BETWEEN DATE_SUB(T1.DATE_SQL, INTERVAL 6 DAY) AND T1.DATE_SQL 
        AND T2.DAY_OF_WEEK = '06'
    WHERE CAST(T1.CALMONTH AS INT64) BETWEEN CAST(FORMAT_DATE('%Y%m', DATE_SUB(DATE(FORMAT_DATE('%Y-%m', CURRENT_DATE())||'-01'), INTERVAL 1 MONTH)) AS INT64) 
    AND 
    CAST(FORMAT_DATE('%Y%m', CURRENT_DATE()) AS INT64)
    GROUP BY 
        T1.DATE_SQL
),

var_contr AS (
    SELECT 
        T1.*
    FROM `also-analytics-model-nonprod.3_MATERIALIZADO_S4.DIM_CONTRATO` AS T1
    INNER JOIN (
        SELECT
            BUKRS,
            RECNNR,
            MAX(INTRENO_VICNCN) AS INTRENO_VICNCN
        FROM `also-analytics-model-nonprod.3_MATERIALIZADO_S4.DIM_CONTRATO`
        GROUP BY
            BUKRS,
            RECNNR) AS T2
    ON 	T2.INTRENO_VICNCN  = T1.INTRENO_VICNCN
),
				
var_contr_zero AS (
    SELECT  
        CONTR.BUKRS				AS BUKRS,
        CONTR.SWENR				AS SWENR,
        CONTR.RECNNR			AS RECNNR,
        T.DATE_SQL				AS RPDATE,
        STYPE.SALESTYPE			AS SALESTYPE,
        RTYPE.SALESREPORTTYPE	AS SALESREPORTTYPE,
        0							AS NET_SALES,
        0							AS GROSS_SALES,
        'NAO'						AS FLGINFORMOU
    FROM `also-analytics-model-nonprod.1_AQUISICAO_MXM.dm_tempo_dia` AS T 
    CROSS JOIN var_contr AS CONTR
    CROSS JOIN var_salestype AS STYPE
    CROSS JOIN var_reporttype AS RTYPE
    WHERE CAST(T.CALMONTH AS INT64) BETWEEN CAST(FORMAT_DATE('%Y%m', DATE_SUB(DATE(FORMAT_DATE('%Y-%m', CURRENT_DATE())||'-01'), INTERVAL 1 MONTH)) AS INT) 
    AND 
    CAST(FORMAT_DATE('%Y%m', CURRENT_DATE()) AS INT)-- Filtrar contratos ativos
),		

var_vendas AS (
    SELECT
        SALES.BUKRS,
        SALES.SWENR,
        SALES.RECNNR,
        SALES.RPDATE,
        SALES.SALESTYPE,
        SALES.SALESREPORTTYPE,
        T.WEEK,
        FORMAT_DATE('%d', CAST (CONCAT(FORMAT_DATE('%Y-%m-', SALES.RPDATE), CAST(DIV(EXTRACT(DAY FROM  SALES.RPDATE), 7) + 1 AS STRING)) AS date)) WEEK_MONTH,
        SUNDAY.DTSTARTWEEK,
        SUNDAY.DTFINISHWEEK,
        SUM(SALES.NET_SALES)			AS NET_SALES,
        SUM(SALES.GROSS_SALES)			AS GROSS_SALES,
        MAX(SALES.FLGINFORMOU)			AS FLGINFORMOU,
        ROW_NUMBER() OVER (PARTITION BY SALES.BUKRS, SALES.RECNNR, SALES.SALESTYPE, SALES.SALESREPORTTYPE ORDER BY SALES.BUKRS, SALES.RECNNR, SALES.SALESTYPE, SALES.SALESREPORTTYPE, SALES.RPDATE) AS COUNTER_SUM
    FROM (
        SELECT
            BUKRS,
            SWENR,
            RECNNR,
            PARSE_DATE('%Y%m%d', RPDATE) AS RPDATE,
            SALESTYPE,
            SALESREPORTTYPE,
            IFNULL(NET_SALES, 0)	 AS NET_SALES,
            IFNULL(GROSS_SALES, 0) AS GROSS_SALES,
            'SIM' AS FLGINFORMOU
        FROM `also-analytics-model-nonprod.1_AQUISICAO_S4.ztre001_intminfv`
    UNION DISTINCT
        SELECT
            BUKRS,
            SWENR,
            RECNNR,
            RPDATE,
            --FORMAT_DATE('%Y%m%d', RPDATE),
            SALESTYPE,
            SALESREPORTTYPE,
            NET_SALES,
            GROSS_SALES,
            FLGINFORMOU
        FROM var_contr_zero) AS SALES
        LEFT OUTER JOIN `also-analytics-model-nonprod.1_AQUISICAO_MXM.dm_tempo_dia` AS T 
            --ON FORMAT_DATE('%Y%m%d', T.DATE_SQL) = SALES.RPDATE
            ON T.DATE_SQL = SALES.RPDATE
        LEFT OUTER JOIN var_sunday AS SUNDAY
            ON T.DATE_SQL = SUNDAY.DATE_SQL
    GROUP BY
        SALES.BUKRS,
        SALES.SWENR,
        SALES.RECNNR,
        SALES.RPDATE,
        SALES.SALESTYPE,
        SALES.SALESREPORTTYPE,
        T.WEEK,
        SUNDAY.DTSTARTWEEK,
        SUNDAY.DTFINISHWEEK

),

var_week_inf AS (
    SELECT
        BUKRS,
        RECNNR,
        WEEK,
        CASE WHEN MAX(FLGINFORMOU) = 'SIM' THEN 'OK' ELSE 'N' END AS FLGWEEKINF
    FROM var_vendas
    GROUP BY
        BUKRS,
        RECNNR,
        WEEK
),        
			
var_week_count_1 AS (
    SELECT
        WEEK,
        ROW_NUMBER() OVER (PARTITION BY CONST ORDER BY WEEK) AS WEEK_NUM 
        FROM (SELECT WEEK, 'X' AS CONST FROM var_vendas GROUP BY WEEK ORDER BY WEEK)
),        
        
var_week_count_2 AS (
    SELECT
        BUKRS,
        RECNNR,
        WEEK,
        ROW_NUMBER() OVER (PARTITION BY BUKRS, RECNNR ORDER BY WEEK) AS COUNTER_WEEK_SUM
    FROM var_week_inf
    WHERE FLGWEEKINF = 'OK'
),
				
var_week_count_3  AS (
    SELECT
        MAX(WEEK_NUM) AS SHOP_WEEK_SUM
    FROM var_week_count_1
)

SELECT
    INTRA.BUKRS,
    INTRA.RECNNR,
    CONTR.INTRENO_VICNCN,
    CONTR.INTRENO,
    CONTR.INTRENO_ECC,
    CONTR.CC_CDCONTRATO,
    CONTR.CSHP_CDCONTRATO,
    CONTR.CSHP_CDCONTRATO_MXM,
    INTRA.SWENR,
    CONTR.RECNTXT,
    CONTR.ZZNMFAN,
    CONTR.XMETXT,
    CONTR.SMENR,
    CONTR.ZZGRPAT_BR,
    CONTR.ZZSUGRP_BR,
    CONTR.ZZATIVM_BR,
    CONTR.SNUNR,
    CONTR.CC_CDGRUPOABL,
    CONTR.CDTIPOUNL,
    CONTR.KEY_GRPABRASCE,
    CONTR.KEY_ATVABRASCE,
    CONTR.CC_FQMFLART_SONAE,
    CONTR.FQMFLART,
    INTRA.RPDATE, 
    INTRA.SALESTYPE,
    INTRA.SALESREPORTTYPE,
    CASE WHEN INTRA.SALESREPORTTYPE = 'G'  THEN 'Faturamentos brutos'
            WHEN INTRA.SALESREPORTTYPE = 'NG' THEN 'Faturamentos líquidos e brutos'
            ELSE 'Faturamentos líquidos'
    END AS SALESREPORTTYPE_TEXT,
    INTRA.NET_SALES,
    INTRA.GROSS_SALES,
    CONTR.CSHP_CDSHOPPING, 
    CONTR.SMENR 											AS CDUNIDADE, 
    CONTR.CC_CDCONTRATO 									AS CDCONTRATO, 
    CONTR.SMIVE 											AS CDCONTRATOS, 
    CONTR.CSHP_NMFANTASIA									AS NMFANTASIA,
    CONTR.CDTPAQUISICAO 									AS CDTPAQUISICAO,
    CONTR.CSHP_CDTIPOUNL									AS CSHP_CDTIPOUNL,
    CONTR.CSHP_DTINAUGURA									AS DTINAUGURA, 
    CONTR.CSHP_DTENCERRAMENTO								AS DTENCERRAMENTO, 
    FORMAT_DATE('%Y%m', INTRA.RPDATE)						AS CALMONTH, 
    FORMAT_DATE('%Y%m', INTRA.RPDATE)						AS MONTH_YEAR, 
    INTRA.RPDATE											AS DATE_SQL, 
    FORMAT_DATE('%m', INTRA.RPDATE) 							AS MONTH, 
    FORMAT_DATE('%Y', INTRA.RPDATE)						AS YEAR, 
    INTRA.WEEK												AS WEEK,
    INTRA.WEEK_MONTH										AS WEEK_MONTH,
    INTRA.DTSTARTWEEK										AS DTSTARTWEEK, 
    INTRA.DTFINISHWEEK										AS DTFINISHWEEK, 
    0															AS VBDIAUTIL, 
    0															AS NUPRAZOINFVND, 
    INTRA.FLGINFORMOU										AS FLGINFORMOU, 
    CASE WHEN INTRA.FLGINFORMOU = 'SIM' THEN 1 ELSE 0 END	AS COUNTER_FLGINFORMOU, 
    1															AS COUNTER, 
    WEEK_INF.FLGWEEKINF 									AS FLGWEEKINF,
    'Intranet Mall' 											AS PROTOCOLO,
    CASE WHEN IFNULL(INTRA.NET_SALES, 0) = 0 THEN IFNULL(INTRA.GROSS_SALES, 0)
            ELSE IFNULL(INTRA.NET_SALES, 0)
    END AS VLVENDA, 
    INTRA.COUNTER_SUM										AS COUNTER_SUM, 
    IFNULL(WEEK_COUNT_2.COUNTER_WEEK_SUM, 0)				AS COUNTER_WEEK_SUM, 
    WEEK_COUNT_1.WEEK_NUM 									AS WEEK_NUM,
    WEEK_COUNT_3.SHOP_WEEK_SUM								AS SHOP_WEEK_SUM, 
    CASE WHEN IFNULL(INTRA.NET_SALES, 0) = 0 THEN IFNULL(INTRA.GROSS_SALES, 0)
            ELSE IFNULL(INTRA.NET_SALES, 0)
    END AS CC_VOLVED,
    'S/4_ALSO'													AS SOURCE_SYSTEM
FROM var_vendas AS INTRA
LEFT OUTER JOIN var_contr AS CONTR
    ON  INTRA.BUKRS  = CONTR.BUKRS
    AND INTRA.RECNNR = CONTR.RECNNR
LEFT OUTER JOIN var_week_inf AS WEEK_INF
    ON  INTRA.BUKRS  = WEEK_INF.BUKRS
    AND INTRA.RECNNR = WEEK_INF.RECNNR
    AND INTRA.WEEK   = WEEK_INF.WEEK
LEFT OUTER JOIN var_week_count_1 AS WEEK_COUNT_1
    ON  INTRA.WEEK = WEEK_COUNT_1.WEEK
LEFT OUTER JOIN var_week_count_2 AS WEEK_COUNT_2
    ON  INTRA.BUKRS  = WEEK_COUNT_2.BUKRS
    AND INTRA.RECNNR = WEEK_COUNT_2.RECNNR
    AND INTRA.WEEK   = WEEK_COUNT_2.WEEK
CROSS JOIN var_week_count_3 AS WEEK_COUNT_3
);