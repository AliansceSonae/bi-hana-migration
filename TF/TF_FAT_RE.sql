CREATE OR REPLACE TABLE FUNCTION `also-analytics-model-nonprod.2_NEGOCIO_S4.TF_FAT_RE_4B` ()
AS (
WITH var_tivraproceduret AS (
		SELECT 'REAA' AS POSTNGPROCEDURE, 'Lançamento de imobilizado' 				AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'READ' AS POSTNGPROCEDURE, 'Depreciação' 								AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'REAP' AS POSTNGPROCEDURE, 'Transferência de adiantamentos'			AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'RECP' AS POSTNGPROCEDURE, 'Lançamento credor' 						AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'REDP' AS POSTNGPROCEDURE, 'Lançamento devedor'						AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'REGP' AS POSTNGPROCEDURE, 'Lançamento em conta do Razão com imposto'	AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'REID' AS POSTNGPROCEDURE, 'Baixa de incobráveis' 						AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'REIS' AS POSTNGPROCEDURE, 'Pagamento em prestações' 					AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'RELI' AS POSTNGPROCEDURE, 'Lançamento de juros' 						AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'RELR' AS POSTNGPROCEDURE, 'Registro de compensação' 					AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'RETA' AS POSTNGPROCEDURE, 'Transferência do imposto' 					AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'RETC' AS POSTNGPROCEDURE, 'Correção imposto' 							AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'RETP' AS POSTNGPROCEDURE, 'Transferência' 							AS XPOSTNGPROCEDURE UNION DISTINCT
		SELECT 'REVP' AS POSTNGPROCEDURE, 'Vago' 										AS XPOSTNGPROCEDURE 
)

,var_tivcaptocesst AS (
		SELECT 'ORCR' AS PROCESS, 'Cancelamento de reservas'							AS XPROCESS UNION DISTINCT
		SELECT 'ORDR' AS PROCESS, 'Eliminar reservas em branco'						AS XPROCESS UNION DISTINCT
		SELECT 'ORPO' AS PROCESS, 'Lançamento das ocupações permanentes'				AS XPROCESS UNION DISTINCT
		SELECT 'ORRS' AS PROCESS, 'Lançamento das reservas'							AS XPROCESS UNION DISTINCT
		SELECT 'REAA' AS PROCESS, 'Reajuste das despesas de condomínio'				AS XPROCESS UNION DISTINCT
		SELECT 'REAJ' AS PROCESS, 'Reajuste de condições' 							AS XPROCESS UNION DISTINCT
		SELECT 'REAL' AS PROCESS, 'Delimitação'										AS XPROCESS UNION DISTINCT
		SELECT 'RECE' AS PROCESS, 'Avaliação do contrato' 							AS XPROCESS UNION DISTINCT
		SELECT 'RECL' AS PROCESS, 'Compensações para contratos de locação'			AS XPROCESS UNION DISTINCT
		SELECT 'RECO' AS PROCESS, 'Liquidação AsC'									AS XPROCESS UNION DISTINCT
		SELECT 'REEO' AS PROCESS, 'Avaliação lançamentos únicos'						AS XPROCESS UNION DISTINCT
		SELECT 'REEP' AS PROCESS, 'Avaliação de contratos'							AS XPROCESS UNION DISTINCT
		SELECT 'REIT' AS PROCESS, 'Divisão de IVA suportado'							AS XPROCESS UNION DISTINCT
		SELECT 'REIV' AS PROCESS, 'Criação de faturas'								AS XPROCESS UNION DISTINCT
		SELECT 'REOP' AS PROCESS, 'Lançamentos únicos'								AS XPROCESS UNION DISTINCT
		SELECT 'REOR' AS PROCESS, 'Determinação de taxa de opção' 					AS XPROCESS UNION DISTINCT
		SELECT 'REPP' AS PROCESS, 'Lançamento periódico: contratos'					AS XPROCESS UNION DISTINCT
		SELECT 'RERV' AS PROCESS, 'Estorno proc.' 									AS XPROCESS UNION DISTINCT
		SELECT 'RESA' AS PROCESS, 'Delimitação de gastos adicionais'					AS XPROCESS UNION DISTINCT
		SELECT 'RESC' AS PROCESS, 'Liquidação de gastos adicionais'					AS XPROCESS UNION DISTINCT
		SELECT 'RESR' AS PROCESS, 'Liquidação de locações baseadas no faturamento'	AS XPROCESS UNION DISTINCT
		SELECT 'RETC' AS PROCESS, 'Correção do IVA suportado' 						AS XPROCESS UNION DISTINCT
		SELECT 'RETN' AS PROCESS, 'Liquidação de locatário da AdC'					AS XPROCESS UNION DISTINCT
		SELECT 'REV'  AS PROCESS, 'Lançamentos periódicos: objetos'					AS XPROCESS 
)
		
,var_flow_type AS (
		SELECT
			FLOW.FLOWTYPE,
			TXT.XFLOWTYPE,
			FLOW.SSOLHAB,
			CASE WHEN FLOW.SSOLHAB = 'H' THEN -1 ELSE 1 END AS NEGATIVO
		FROM `also-analytics-model-nonprod.1_AQUISICAO_S4.tivcdflowtype` AS FLOW
		LEFT OUTER JOIN `also-analytics-model-nonprod.1_AQUISICAO_S4.tivcdflowtypet` AS TXT
			ON  TXT.FLOWTYPE = FLOW.FLOWTYPE
			AND TXT.SPRAS    = 'P'
)
			
,var_classificacao AS (
		SELECT
			COND.CONDTYPE,
			IFNULL(ALUG_CONTRATUAL, 0)	AS ALUG_CONTRATUAL,
			IFNULL(ALUG_FATURADO, 0)		AS ALUG_FATURADO,
			IFNULL(ALUG_LIQUIDO, 0)		AS ALUG_LIQUIDO,
			IFNULL(ALUG_TOT, 0)			AS ALUG_TOT,
			IFNULL(DESC_CARENCIA, 0)		AS DESC_CARENCIA,
			IFNULL(ALUG_COMPLEMENTAR, 0)	AS ALUG_COMPLEMENTAR,
			IFNULL(ENC_COMUM, 0)			AS ENC_COMUM,
			IFNULL(ENC_ESPECIFICO, 0) 	AS ENC_ESPECIFICO,
			IFNULL(FPP, 0)				AS FPP,
			IFNULL(CO, 0) 				AS CO,
			IFNULL(CO_COM_ESPECIFICO, 0)	AS CO_COM_ESPECIFICO,
			IFNULL(CARENCIA, 0)			AS CARENCIA,
			IFNULL(DESCONTO_PRE, 0)		AS DESCONTO_PRE,
			IFNULL(NEGATIVO, 1)			AS NEGATIVO,
			IFNULL(IPTU, 0)				AS IPTU,
			IFNULL(DESC_TOT_RE, 0)		AS DESC_TOT_RE,
			IFNULL(TX_TRANSF, 0)			AS TX_TRANSF,
			IFNULL(ALUG_MIN_MESES_ANT, 0)	AS ALUG_MIN_MESES_ANT
		FROM `also-analytics-model-nonprod.3_MATERIALIZADO_S4.DIM_CONDICAO`
			 AS COND
		LEFT OUTER JOIN `also-analytics-model-nonprod.3_MATERIALIZADO_S4.DIM_CONDICAO_FAT`
			 AS CLASS
			ON COND.CONDTYPE = CLASS.CONDTYPE
)

,var_viradoc AS (
		SELECT
			CASE WHEN CLASS.ALUG_COMPLEMENTAR = 1 
				THEN LEFT(ITM.PFROM, 6) 
				ELSE LEFT(HDR.PSTNGDATE, 6) 
			END AS CALMONTH,
			CONTR.CSHP_CDSHOPPING,
			CONTR.INTRENO_VICNCN,
			CONTR.CC_CDCONTRATO,
			CONTR.RECNNR,
			HDR.DOCGUID,
			ITM.ITEMNO,
			HDR.PSTNGPROCEDURE,
			PSTNGPROCEDURE_TXT.XPOSTNGPROCEDURE,
			ITM.PROCESS,
			PROCESS_TXT.XPROCESS,
			ITM.PROCESSGUID,
			HDR.PROCESSID,
			HDR.FISC_YEAR,
			HDR.PSTNGPERIOD,
			HDR.PSTNGDATE,
			HDR.DOCDATE,
			HDR.REFDOCID,
			HDR.REVID,
			HDR.REVDOCGUID,
			HDR.REFERENCEDOCGUID,
			HDR.RERF,
			HDR.DERF,
			HDR.TERF,
			HDR.REHER,
			HDR.RBEAR,
			HDR.DBEAR,
			HDR.TBEAR,
			HDR.RBHER,
			ITM.REFITEMNO,
			ITM.BUKRS,
			ITM.ITEMTYPE,
			ITM.CLEARINGSTATUS,
			ITM.REFGUIDORIGIN,
			ITM.REFGUID,
			ITM.OBJNR,
			ITM.DCINDICATOR,
			CASE WHEN ITM.DCINDICATOR = 'C' THEN -1 ELSE 1 END AS DCINDICATOR_INT,
			ITM.PRCTR,
			ITM.PARTNER,
			ITM.PARTNEROBJNR,
			ITM.PFROM,
			ITM.PTO,
			ITM.BLINEDATE,
			ITM.ORIGDUEDATE,
			ITM.CONDTYPE,
			COND.CONDTYPE_TEXT20,
			ITM.FLOWTYPE,
			FLOWTYPE.XFLOWTYPE,
			FLOWTYPE.SSOLHAB,
			ITM.ACCTYPE,
			ITM.GLACCSYMB,
			ITM.GLACCOUNT,
			ITM.AMOUNT,
			ITM.GROSSAMOUNT,
			ITM.NETAMOUNT,
			ITM.TAXAMOUNT,
			ITM.CURRENCY,
			ITM.CTLCAMOUNT,
			ITM.CTLCGROSSAMOUNT,
			ITM.CTLCNETAMOUNT,
			ITM.CTLCTAXAMOUNT,
			ITM.CTLCCURRKEY,
			ITM.CTFCAMOUNT,
			ITM.CTFCGROSSAMOUNT,
			ITM.CTFCNETAMOUNT,
			ITM.CTFCTAXAMOUNT,
			ITM.CTFCCURRKEY,
			ITM.TAXRATE,
			ITM.EXTREF1,
			ITM.EXTREF2,
			ITM.EXTREF3,
			ITM.EXTREF4,
			ITM.ASSETOBJNR,
			ITM.REDUCTION_PERCENTAGE,
			ITM.AMOUNT *  CLASS.ALUG_CONTRATUAL 		AS ALUG_CONTRATUAL,
			ITM.AMOUNT *  CLASS.ALUG_FATURADO			AS ALUG_FATURADO,
			ITM.AMOUNT *  CLASS.ALUG_LIQUIDO			AS ALUG_LIQUIDO,
			ITM.AMOUNT *  CLASS.ALUG_TOT				AS ALUG_TOT,
			ITM.AMOUNT *  CLASS.DESC_CARENCIA			AS DESC_CARENCIA,
			ITM.AMOUNT *  CLASS.ALUG_COMPLEMENTAR		AS ALUG_COMPLEMENTAR,
			ITM.AMOUNT *  CLASS.ENC_COMUM				AS ENC_COMUM,
			ITM.AMOUNT *  CLASS.ENC_ESPECIFICO			AS ENC_ESPECIFICO,
			ITM.AMOUNT *  CLASS.FPP 					AS FPP,
			ITM.AMOUNT *  CLASS.CO						AS CO,
			ITM.AMOUNT *  CLASS.CO_COM_ESPECIFICO		AS CO_COM_ESPECIFICO,
			ITM.AMOUNT *  CLASS.CARENCIA				AS CARENCIA,
			ITM.AMOUNT *  CLASS.DESCONTO_PRE			AS DESCONTO_PRE,
			ITM.AMOUNT *  CLASS.IPTU					AS IPTU,
			ITM.AMOUNT *  CLASS.DESC_TOT_RE				AS DESC_TOT_RE,
			ITM.AMOUNT *  CLASS.TX_TRANSF				AS TX_TRANSF,
			ITM.AMOUNT *  CLASS.ALUG_MIN_MESES_ANT		AS ALUG_MIN_MESES_ANT
		FROM `also-analytics-model-nonprod.1_AQUISICAO_S4.viradoc` AS HDR
		INNER JOIN `also-analytics-model-nonprod.1_AQUISICAO_S4.viradocitem` AS ITM
			ON ITM.DOCGUID = HDR.DOCGUID
		LEFT OUTER JOIN `also-analytics-model-nonprod.3_MATERIALIZADO_S4.DIM_CONTRATO`
			 AS CONTR
			ON CONTR.OBJNR = ITM.OBJNR
			OR CONTR.OBJNR = ITM.PARTNEROBJNR
		LEFT OUTER JOIN var_tivraproceduret AS PSTNGPROCEDURE_TXT
			ON PSTNGPROCEDURE_TXT.POSTNGPROCEDURE = HDR.PSTNGPROCEDURE
		LEFT OUTER JOIN var_tivcaptocesst AS PROCESS_TXT
			ON PROCESS_TXT.PROCESS = ITM.PROCESS
		LEFT OUTER JOIN `also-analytics-model-nonprod.3_MATERIALIZADO_S4.DIM_CONDICAO`
			 AS COND
			ON COND.CONDTYPE = ITM.CONDTYPE
		LEFT OUTER JOIN var_flow_type AS FLOWTYPE
			ON FLOWTYPE.FLOWTYPE = ITM.FLOWTYPE
		LEFT OUTER JOIN var_classificacao AS CLASS
			ON CLASS.CONDTYPE = ITM.CONDTYPE
)

SELECT
    SAIDA.CALMONTH,
    SAIDA.CSHP_CDSHOPPING,
    SAIDA.INTRENO_VICNCN,
    SAIDA.CC_CDCONTRATO,
    SAIDA.RECNNR,
    SAIDA.DOCGUID,
    SAIDA.ITEMNO,
    SAIDA.PSTNGPROCEDURE,
    SAIDA.XPOSTNGPROCEDURE,
    SAIDA.PROCESS,
    SAIDA.XPROCESS,
    SAIDA.PROCESSGUID,
    SAIDA.PROCESSID,
    SAIDA.FISC_YEAR,
    SAIDA.PSTNGPERIOD,
    SAIDA.PSTNGDATE,
    SAIDA.DOCDATE,
    SAIDA.REFDOCID,
    SAIDA.REVID,
    SAIDA.REVDOCGUID,
    SAIDA.REFERENCEDOCGUID,
    SAIDA.RERF,
    SAIDA.DERF,
    SAIDA.TERF,
    SAIDA.REHER,
    SAIDA.RBEAR,
    SAIDA.DBEAR,
    SAIDA.TBEAR,
    SAIDA.RBHER,
    SAIDA.REFITEMNO,
    SAIDA.BUKRS,
    SAIDA.ITEMTYPE,
    SAIDA.CLEARINGSTATUS,
    SAIDA.REFGUIDORIGIN,
    SAIDA.REFGUID,
    SAIDA.OBJNR,
    SAIDA.DCINDICATOR,
    SAIDA.PRCTR,
    SAIDA.PARTNER,
    SAIDA.PARTNEROBJNR,
    SAIDA.PFROM,
    SAIDA.PTO,
    SAIDA.BLINEDATE,
    SAIDA.ORIGDUEDATE,
    SAIDA.CONDTYPE,
    SAIDA.CONDTYPE_TEXT20,
    SAIDA.FLOWTYPE,
    SAIDA.XFLOWTYPE,
    SAIDA.SSOLHAB,
    SAIDA.ACCTYPE,
    SAIDA.GLACCSYMB,
    SAIDA.GLACCOUNT,
    SAIDA.AMOUNT				* DCINDICATOR_INT AS AMOUNT,
    SAIDA.GROSSAMOUNT			* DCINDICATOR_INT AS GROSSAMOUNT,
    SAIDA.NETAMOUNT				* DCINDICATOR_INT AS NETAMOUNT,
    SAIDA.TAXAMOUNT				* DCINDICATOR_INT AS TAXAMOUNT,
    SAIDA.CURRENCY,
    SAIDA.CTLCAMOUNT			* DCINDICATOR_INT AS CTLCAMOUNT,
    SAIDA.CTLCGROSSAMOUNT		* DCINDICATOR_INT AS CTLCGROSSAMOUNT,
    SAIDA.CTLCNETAMOUNT			* DCINDICATOR_INT AS CTLCNETAMOUNT,
    SAIDA.CTLCTAXAMOUNT			* DCINDICATOR_INT AS CTLCTAXAMOUNT,
    SAIDA.CTLCCURRKEY,
    SAIDA.CTFCAMOUNT			* DCINDICATOR_INT AS CTFCAMOUNT,
    SAIDA.CTFCGROSSAMOUNT		* DCINDICATOR_INT AS CTFCGROSSAMOUNT,
    SAIDA.CTFCNETAMOUNT			* DCINDICATOR_INT AS CTFCNETAMOUNT,
    SAIDA.CTFCTAXAMOUNT			* DCINDICATOR_INT AS CTFCTAXAMOUNT,
    SAIDA.CTFCCURRKEY,
    SAIDA.TAXRATE,
    SAIDA.EXTREF1,
    SAIDA.EXTREF2,
    SAIDA.EXTREF3,
    SAIDA.EXTREF4,
    SAIDA.ASSETOBJNR,
    SAIDA.REDUCTION_PERCENTAGE,
    SAIDA.ALUG_CONTRATUAL		* DCINDICATOR_INT AS ALUG_CONTRATUAL,
    SAIDA.ALUG_FATURADO			* DCINDICATOR_INT AS ALUG_FATURADO,
    SAIDA.ALUG_LIQUIDO			* DCINDICATOR_INT AS ALUG_LIQUIDO,
    SAIDA.ALUG_TOT				* DCINDICATOR_INT AS ALUG_TOT,
    SAIDA.DESC_CARENCIA			* DCINDICATOR_INT AS DESC_CARENCIA,
    SAIDA.ALUG_COMPLEMENTAR		* DCINDICATOR_INT AS ALUG_COMPLEMENTAR,
    SAIDA.ENC_COMUM				* DCINDICATOR_INT AS ENC_COMUM,
    SAIDA.ENC_ESPECIFICO		* DCINDICATOR_INT AS ENC_ESPECIFICO,
    SAIDA.FPP					* DCINDICATOR_INT AS FPP,
    SAIDA.CO					* DCINDICATOR_INT AS CO,
    SAIDA.CO_COM_ESPECIFICO		* DCINDICATOR_INT AS CO_COM_ESPECIFICO,
    SAIDA.CARENCIA				* DCINDICATOR_INT AS CARENCIA,
    SAIDA.DESCONTO_PRE			* DCINDICATOR_INT AS DESCONTO_PRE,
    SAIDA.IPTU					* DCINDICATOR_INT AS IPTU,
    SAIDA.DESC_TOT_RE			* DCINDICATOR_INT AS DESC_TOT_RE,
    SAIDA.TX_TRANSF				* DCINDICATOR_INT AS TX_TRANSF,
    SAIDA.ALUG_MIN_MESES_ANT	* DCINDICATOR_INT AS ALUG_MIN_MESES_ANT
FROM var_viradoc AS SAIDA
)